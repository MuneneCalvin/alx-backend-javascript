{
  // --------------------------------------------------------------------
  // JSHint Configuration, Strict Edition
  // --------------------------------------------------------------------
  //
  // This is a options template for [JSHint][1], using [JSHint example][2]
  // and [Ory Band's example][3] as basis and setting config values to
  // be most strict:
  //
  // * set all enforcing options to true
  // * set all relaxing options to false
  // * set all environment options to false, except the browser value
  // * set all JSLint legacy options to false
  //
  // [1]: http://www.jshint.com/
  // [2]: https://github.com/jshint/node-jshint/blob/master/example/config.json
  // [3]: https://github.com/oryband/dotfiles/blob/master/jshintrc
  //
  // @author http://michael.haschke.biz/
  // @license http://unlicense.org/

  // == Enforcing Options ===============================================
  //
  // These options tell JSHint to be more strict towards your code. Use
  // them if you want to allow only a safe subset of JavaScript, very
  // useful when your codebase is shared with a big number of developers
  // with different skill levels.

  "bitwise"       : true,     // Prohibit bitwise operators (&, |, ^, etc.).
  "curly"         : true,     // Require {} for every new block or scope.
  "eqeqeq"        : true,     // Require triple equals i.e. `===`.
  "forin"         : true,     // Tolerate `for in` loops without `hasOwnPrototype`.
  "immed"         : true,     // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
  "latedef"       : true,     // Prohibit variable use before definition.
  "newcap"        : true,     // Require capitalization of all constructor functions e.g. `new F()`.
  "noarg"         : true,     // Prohibit use of `arg